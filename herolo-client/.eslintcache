[{"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\index.js":"1","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\App.js":"2","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\reportWebVitals.js":"3","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\hoc\\Layout\\Layout.js":"4","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Manage\\Manage.js":"5","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"6","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js":"7","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\DrawerToggle\\DrawerToggle.js":"8","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Compose\\Compose.js":"9","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actiontypes.js":"10","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actionTypes.js":"11","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\shared\\utility.js":"12","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Loading\\Loading.js":"13","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Input\\Input.js":"14","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\MsgDialog\\MsgDialog.js":"15","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\index.js":"16","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\compose.js":"17","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\compose.js":"18","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\manage.js":"19","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\manage.js":"20","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\ConfirmationDialog\\ConfirmationDialog.js":"21","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Auth\\Auth.js":"22","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\auth.js":"23","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\auth.js":"24","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\NavigationItems\\NavigationItems.js":"25","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\NavigationItems\\NavigationItem\\NavigationItem.js":"26","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Logout\\Logout.js":"27","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\utility.js":"28"},{"size":1138,"mtime":1612539831873,"results":"29","hashOfConfig":"30"},{"size":1374,"mtime":1612644633860,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":736,"mtime":1611937271735,"results":"33","hashOfConfig":"30"},{"size":3584,"mtime":1612655392307,"results":"34","hashOfConfig":"30"},{"size":581,"mtime":1612560280396,"results":"35","hashOfConfig":"30"},{"size":786,"mtime":1612560293636,"results":"36","hashOfConfig":"30"},{"size":336,"mtime":1612560298994,"results":"37","hashOfConfig":"30"},{"size":4805,"mtime":1612653923220,"results":"38","hashOfConfig":"30"},{"size":98,"mtime":1611952010651,"results":"39","hashOfConfig":"30"},{"size":513,"mtime":1612646502795,"results":"40","hashOfConfig":"30"},{"size":1515,"mtime":1612653762503,"results":"41","hashOfConfig":"30"},{"size":365,"mtime":1611939450275,"results":"42","hashOfConfig":"30"},{"size":1314,"mtime":1611949521002,"results":"43","hashOfConfig":"30"},{"size":571,"mtime":1612125719638,"results":"44","hashOfConfig":"30"},{"size":269,"mtime":1612644508651,"results":"45","hashOfConfig":"30"},{"size":1302,"mtime":1612655705357,"results":"46","hashOfConfig":"30"},{"size":1087,"mtime":1612025011344,"results":"47","hashOfConfig":"30"},{"size":1103,"mtime":1612175468311,"results":"48","hashOfConfig":"30"},{"size":2184,"mtime":1612658175961,"results":"49","hashOfConfig":"30"},{"size":955,"mtime":1612175857827,"results":"50","hashOfConfig":"30"},{"size":4690,"mtime":1612643667208,"results":"51","hashOfConfig":"30"},{"size":1442,"mtime":1612654819191,"results":"52","hashOfConfig":"30"},{"size":3091,"mtime":1612658203647,"results":"53","hashOfConfig":"30"},{"size":838,"mtime":1612566745419,"results":"54","hashOfConfig":"30"},{"size":445,"mtime":1611937167902,"results":"55","hashOfConfig":"30"},{"size":860,"mtime":1612644206265,"results":"56","hashOfConfig":"30"},{"size":1178,"mtime":1612658675334,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"jipitp",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\index.js",[],["120","121"],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\App.js",["122"],"import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actionCreators from './store/actions/index';\n\nimport Layout from './hoc/Layout/Layout';\nimport Manage from './containers/Manage/Manage';\nimport Compose from './containers/Compose/Compose';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Logout/Logout';\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.onAutoLogin();\n  }, []);\n\n  return (\n    <Layout>\n      {\n        props.user ? \n        <Switch>\n          <Route path=\"/\" exact component={Manage} />\n          <Route path=\"/compose\" component={Compose} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route render={ () => <div>Page Not Found</div>} />\n        </Switch> : \n        <Switch>\n          <Route path=\"/\" exact component={Auth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route render={ () => <div>Page Not Found</div>} />\n        </Switch>\n      }\n    </Layout>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.authReducer.user,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin: payload => dispatch(actionCreators.autoLoginAttempt(payload))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\reportWebVitals.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Manage\\Manage.js",["123"],"\r\n\r\nimport React, { useState, useEffect }  from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport classes from './Manage.module.scss';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\nimport MsgDialog from '../../components/MsgDialog/MsgDialog';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog/ConfirmationDialog';\r\n\r\nconst Manage = props => { \r\n\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n  const [deleteInd, setDeleteInd] = useState(-1);\r\n  const [showMsg, setShowMsg] = useState(false);\r\n  const [listSent, setListSent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    props.onSubmit();\r\n    return props.onReset;\r\n  }, []);\r\n\r\n  const changeTab = e => {\r\n    setListSent(e.target.textContent === 'Sent');\r\n  }\r\n\r\n  const deleteMail = (allow) => {\r\n    if (allow) {\r\n      const email = listSent ? props.sent[deleteInd] : props.received[deleteInd];\r\n      setShowMsg(true);\r\n      props.onDelete({...email, type: listSent ? 'sent' : 'received'});\r\n    }\r\n    setConfirmDialog(false);\r\n    setDeleteInd(-1);\r\n  }\r\n\r\n  const confirm = (ind) => {\r\n    setConfirmDialog(true);\r\n    setDeleteInd(ind);\r\n  }\r\n\r\n\r\n  const getList = (list, action) => {\r\n    if (list.length) {\r\n      let mails = [(\r\n        <li key='-100' className={classes.Sticky}>\r\n          { action !== 'sent' ? <p>Sender</p> : <p>Receiver</p> }\r\n          <p>Subject</p>\r\n          <p>Date</p>\r\n          <p>Message</p>\r\n        </li>\r\n      )]\r\n      mails.push(...list.map((email, ind) => (\r\n        <li key={ind}>\r\n          { action === 'sent' ? <p>{email.receiver}</p> : <p>{email.sender}</p> }\r\n          <p>{email.subject}</p>\r\n          <p>{email.creation.split('T')[0]}</p>\r\n          <p>{email.message}</p>\r\n          <button type='button' onClick={e => confirm(ind)}>Delete?</button>\r\n        </li>\r\n      )));\r\n      return mails;\r\n    } else {\r\n      return <li>No e-mails were {action} by the user.</li>\r\n    }\r\n  };\r\n\r\n  const hideMsg = () => {\r\n    setShowMsg(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={classes.Manage}>\r\n      <ConfirmationDialog msg='Are you sure?' action={deleteMail} show={confirmDialog}/>\r\n      <button className={classes.Form_Button} onClick={props.onSubmit}>Refresh</button>\r\n      { props.loading ? <Loading /> : (\r\n        <div className={classes.Mails}>\r\n        <div className={classes.Tabs}>\r\n          <h4 className={listSent ? classes.Active : ''} \r\n              onClick={changeTab}>\r\n                Sent\r\n          </h4>\r\n          <h4 className={!listSent ? classes.Active : ''} \r\n              onClick={changeTab}>\r\n                Received\r\n          </h4>\r\n        </div>\r\n        <ul>\r\n          { listSent ? getList(props.sent, 'sent') :\r\n                      getList(props.received, 'received') }\r\n        </ul>\r\n      </div>\r\n      ) }\r\n      \r\n      <MsgDialog msg={props.errorMessages} show={showMsg} hideMsg={hideMsg}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.manageReducer.loading,\r\n    errorMessages: state.manageReducer.errors,\r\n    sent: state.manageReducer.sent,\r\n    received: state.manageReducer.received,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: payload => dispatch(actionCreators.getMessagesAttempt(payload)),\r\n    onReset: () => dispatch(actionCreators.resetManage()),\r\n    onDelete: payload => dispatch(actionCreators.deleteManage(payload))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Manage);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\DrawerToggle\\DrawerToggle.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Compose\\Compose.js",["124","125"],"\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport classes from './Compose.module.scss';\r\n\r\nimport { inputChangeHandler } from '../../shared/utility';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport MsgDialog from '../../components/MsgDialog/MsgDialog';\r\n\r\nconst Compose = props => {\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [showMsg, setShowMsg] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    emailForm: {\r\n      subject: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'text',\r\n          id: 'subject',\r\n          placeholder: \"Enter your subject\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Subject:'\r\n      },\r\n      receiver: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'email',\r\n          id: 'receiver',\r\n          placeholder: \"Recipient Email.\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Recipient Email:'\r\n      },\r\n      content: {\r\n        elementType: 'textarea', \r\n        elementProps: {\r\n          id: 'content',\r\n          placeholder: \"Your message goes here...\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Message:'\r\n      }\r\n    },\r\n    formValid: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    return props.onReset;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.operationType === 'success') {\r\n      setForm({\r\n        formValid: false,\r\n        emailForm: {\r\n          subject: {\r\n            ...form.emailForm.subject,\r\n            elementProps: {\r\n              ...form.emailForm.subject.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          },\r\n          receiver: {\r\n            ...form.emailForm.receiver,\r\n            elementProps: {\r\n              ...form.emailForm.receiver.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          },\r\n          content: {\r\n            ...form.emailForm.content,\r\n            elementProps: {\r\n              ...form.emailForm.content.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          }\r\n        }\r\n      })\r\n      setSuccess(true);\r\n    }\r\n  }, [props.operationType]);\r\n\r\n  const submitEmailHandler = e => {\r\n    e.preventDefault();\r\n    setShowMsg(true);\r\n    setSuccess(false);\r\n    if (!form.formValid) {\r\n      setErrorMsg(['The Form is Invalid']);\r\n      setTimeout(() => {\r\n        setErrorMsg([]);\r\n        setShowMsg(false);\r\n      }, 2000);\r\n      return;\r\n    }\r\n    const receiver = form.emailForm.receiver.elementProps.value;\r\n    const subject = form.emailForm.subject.elementProps.value;\r\n    const content = form.emailForm.content.elementProps.value;\r\n    \r\n    props.onSubmit({receiver, subject, content});\r\n  };\r\n\r\n  const hideMsg = () => {\r\n    setShowMsg(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Compose}>\r\n      { props.loading ? <Loading /> : null }\r\n      { success ? <p>Email sent successfully!</p> : null}\r\n      <form className={classes.Contact_Info} onSubmit={submitEmailHandler} noValidate>\r\n        <h4>Email Info</h4>\r\n        {\r\n          Object.entries(form.emailForm).map((ele, i) => {\r\n            return <Input \r\n              key={i} \r\n              {...ele[1]} \r\n              changed={(event) => \r\n                inputChangeHandler(event, ele[1].elementProps.id, form.emailForm, setForm, 'emailForm')} />\r\n          })\r\n        }\r\n        <button disabled={!form.formValid}>Send</button>\r\n      </form>\r\n      <MsgDialog msg={errorMsg.length ? errorMsg : props.errorMessages}\r\n                  show={showMsg} hideMsg={hideMsg} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.composeReducer.loading,\r\n    errorMessages: state.composeReducer.errors,\r\n    operationType: state.composeReducer.operationType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: payload => dispatch(actionCreators.postMsgAttempt(payload)),\r\n    onReset: () => dispatch(actionCreators.resetCompose()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Compose);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actiontypes.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\shared\\utility.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Loading\\Loading.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\MsgDialog\\MsgDialog.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\index.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\compose.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\compose.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\manage.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\manage.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\ConfirmationDialog\\ConfirmationDialog.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Auth\\Auth.js",["126","127"],"\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport classes from './Auth.module.scss';\r\nimport { inputChangeHandler } from '../../shared/utility';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\n\r\nimport MsgDialog from '../../components/MsgDialog/MsgDialog';\r\n\r\nconst Auth = props => { \r\n  const [login, setLogin] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [showMsg, setShowMsg] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    authForm: {\r\n      email: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'email',\r\n          id: 'email',\r\n          placeholder: \"Ex: abcd@gmail.com\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Email:'\r\n      },\r\n      password: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'password',\r\n          id: 'password',\r\n          placeholder: \"Enter a password\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Password:'\r\n      },\r\n      confirmPassword: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'password',\r\n          id: 'confirmPassword',\r\n          placeholder: \"Confirm your password\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n          equalToField: 'password'\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Confirm Password:'\r\n      }\r\n    },\r\n    formValid: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.user) {\r\n      props.history.push({pathname: '/'});\r\n    }\r\n  }, [props.user]);\r\n\r\n  const submitSignupHandler = e => {\r\n    e.preventDefault();\r\n    \r\n    setShowMsg(true);\r\n    // if (!form.formValid) {\r\n    //   setErrorMsg(['The Form is Invalid']);\r\n    //   setTimeout(() => {\r\n    //     setErrorMsg([]);\r\n    //     setShowMsg(false);\r\n    //   }, 2000);\r\n    //   return;\r\n    // }\r\n\r\n    const email = form.authForm.email.elementProps.value;\r\n    const password = form.authForm.password.elementProps.value;\r\n    const confirmPassword = form.authForm.confirmPassword.elementProps.value;\r\n    if (login) {\r\n      props.onLogin({email, password});\r\n    } else {\r\n      props.onSignup({email, password, confirmPassword});\r\n    }\r\n  };\r\n\r\n  const switchAuth = () => {\r\n    setForm({\r\n      ...form,\r\n      authForm: {\r\n        ...form.authForm,\r\n        confirmPassword: {\r\n          ...form.authForm.confirmPassword,\r\n          elementProps: {\r\n            ...form.authForm.confirmPassword.elementProps,\r\n            value: ''\r\n          },\r\n          valid: false\r\n        }\r\n      },\r\n      formValid: form.formValid && !login\r\n    });\r\n    hideMsg();\r\n    setLogin(!login);\r\n  }\r\n\r\n  const hideMsg = () => {\r\n    setShowMsg(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Auth}>\r\n      { props.loading ? <Loading /> : null }\r\n      <form className={classes.Contact_Info} onSubmit={submitSignupHandler} noValidate>\r\n        <h4>{login ? 'Login' : 'Signup'} Info</h4>\r\n        {\r\n          Object.entries(form.authForm).map((ele, i) => {\r\n            return login && ele[0] === 'confirmPassword' ? null : <Input \r\n              key={i} \r\n              {...ele[1]} \r\n              changed={(event) => inputChangeHandler(event, ele[1].elementProps.id, form.authForm, setForm, 'authForm')} />\r\n          })\r\n        }\r\n\r\n        <button disabled={false} className={classes.Form_Button}>\r\n          {login ? 'Login' : 'Signup'}\r\n        </button>\r\n        <button type='button' \r\n                className={classes.Form_Button} \r\n                onClick={switchAuth}>Switch to {login ? 'Signup' : 'Login'}</button>\r\n      </form>\r\n      <MsgDialog msg={errorMsg.length ? errorMsg : props.errorMessages} show={showMsg} hideMsg={hideMsg}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n    user: state.authReducer.user,\r\n    errorMessages: state.authReducer.errors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignup: (payload) => dispatch(actionCreators.signupAttempt(payload)),\r\n    onLogin: (payload) => dispatch(actionCreators.loginAttempt(payload))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\auth.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\auth.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\NavigationItems\\NavigationItems.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Logout\\Logout.js",["128","129","130"],"\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\n\r\nconst Logout = props => { \r\n\r\n  useEffect(() => {\r\n    props.onLogout({email: props.user.email});\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!props.user ||props.errorMessages.length) {\r\n      props.history.push({pathname: '/'})\r\n    }\r\n  }, [props.user, props.errorMessages]);\r\n\r\n  return (\r\n    null\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    loading: state.authReducer.loading,\r\n    errorMessages: state.authReducer.errors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: payload => dispatch(actionCreators.logoutAttempt(payload))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\utility.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":19,"column":6,"nodeType":"137","endLine":19,"endColumn":8,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":6,"nodeType":"137","endLine":22,"endColumn":8,"suggestions":"139"},{"ruleId":"135","severity":1,"message":"140","line":73,"column":6,"nodeType":"137","endLine":73,"endColumn":8,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"142","line":111,"column":6,"nodeType":"137","endLine":111,"endColumn":27,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":16,"column":20,"nodeType":"146","messageId":"147","endLine":16,"endColumn":31},{"ruleId":"135","severity":1,"message":"148","line":78,"column":6,"nodeType":"137","endLine":78,"endColumn":18,"suggestions":"149"},{"ruleId":"144","severity":1,"message":"150","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":13,"column":6,"nodeType":"137","endLine":13,"endColumn":8,"suggestions":"151"},{"ruleId":"135","severity":1,"message":"148","line":19,"column":6,"nodeType":"137","endLine":19,"endColumn":39,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["155"],["156"],"React Hook useEffect has a missing dependency: 'props.onReset'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has missing dependencies: 'form.emailForm.content', 'form.emailForm.receiver', and 'form.emailForm.subject'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setForm' needs the current value of 'form.emailForm.subject'.",["158"],"no-unused-vars","'setErrorMsg' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["159"],"'React' is defined but never used.",["160"],["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"162","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [props]",{"range":"174","text":"175"},{"range":"176","text":"175"},"Update the dependencies array to be: [props.onReset]",{"range":"177","text":"178"},"Update the dependencies array to be: [form.emailForm.content, form.emailForm.receiver, form.emailForm.subject, props.operationType]",{"range":"179","text":"180"},"Update the dependencies array to be: [props.history, props.user]",{"range":"181","text":"182"},{"range":"183","text":"175"},"Update the dependencies array to be: [props.user, props.errorMessages, props.history]",{"range":"184","text":"185"},[523,525],"[props]",[744,746],[1881,1883],"[props.onReset]",[2862,2883],"[form.emailForm.content, form.emailForm.receiver, form.emailForm.subject, props.operationType]",[2018,2030],"[props.history, props.user]",[259,261],[398,431],"[props.user, props.errorMessages, props.history]"]