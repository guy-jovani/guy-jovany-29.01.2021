[{"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\index.js":"1","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\App.js":"2","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\reportWebVitals.js":"3","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\hoc\\Layout\\Layout.js":"4","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Manage\\Manage.js":"5","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"6","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js":"7","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"8","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\DrawerToggle\\DrawerToggle.js":"9","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"10","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Compose\\Compose.js":"11","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actiontypes.js":"12","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actionTypes.js":"13","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\shared\\utility.js":"14","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Loading\\Loading.js":"15","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Input\\Input.js":"16","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\MsgDialog\\MsgDialog.js":"17","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\index.js":"18","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\compose.js":"19","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\compose.js":"20","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\manage.js":"21","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\manage.js":"22","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\ConfirmationDialog\\ConfirmationDialog.js":"23"},{"size":1061,"mtime":1612025497117,"results":"24","hashOfConfig":"25"},{"size":526,"mtime":1611938858241,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":736,"mtime":1611937271735,"results":"28","hashOfConfig":"25"},{"size":5054,"mtime":1612174736236,"results":"29","hashOfConfig":"25"},{"size":564,"mtime":1611937307088,"results":"30","hashOfConfig":"25"},{"size":769,"mtime":1611937326490,"results":"31","hashOfConfig":"25"},{"size":447,"mtime":1611938845662,"results":"32","hashOfConfig":"25"},{"size":336,"mtime":1611937062250,"results":"33","hashOfConfig":"25"},{"size":445,"mtime":1611937167902,"results":"34","hashOfConfig":"25"},{"size":5502,"mtime":1612125777613,"results":"35","hashOfConfig":"25"},{"size":98,"mtime":1611952010651,"results":"36","hashOfConfig":"25"},{"size":329,"mtime":1612126945719,"results":"37","hashOfConfig":"25"},{"size":1424,"mtime":1612117180263,"results":"38","hashOfConfig":"25"},{"size":365,"mtime":1611939450275,"results":"39","hashOfConfig":"25"},{"size":1314,"mtime":1611949521002,"results":"40","hashOfConfig":"25"},{"size":571,"mtime":1612125719638,"results":"41","hashOfConfig":"25"},{"size":153,"mtime":1612124185939,"results":"42","hashOfConfig":"25"},{"size":926,"mtime":1612197591685,"results":"43","hashOfConfig":"25"},{"size":1087,"mtime":1612025011344,"results":"44","hashOfConfig":"25"},{"size":1103,"mtime":1612175468311,"results":"45","hashOfConfig":"25"},{"size":1581,"mtime":1612197630825,"results":"46","hashOfConfig":"25"},{"size":955,"mtime":1612175857827,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jipitp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\index.js",[],["98","99"],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\App.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\reportWebVitals.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Manage\\Manage.js",["100"],"\r\n\r\nimport React, { useState, useEffect }  from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport classes from './Manage.module.scss';\r\nimport { inputChangeHandler } from '../../shared/utility';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport MsgDialog from '../../components/MsgDialog/MsgDialog';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog/ConfirmationDialog';\r\n\r\nconst Manage = props => { \r\n\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n  const [deleteInd, setDeleteInd] = useState(-1);\r\n  const [showMsg, setShowMsg] = useState(false);\r\n  const [listSent, setListSent] = useState(true);\r\n  \r\n  const [form, setForm] = useState({\r\n    idForm: {\r\n      id: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'text',\r\n          id: 'id',\r\n          placeholder: \"The User Id you want to look for.\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'User Id:'\r\n      }\r\n    },\r\n    formValid: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    return props.onReset;\r\n  }, []);\r\n\r\n  const changeTab = e => {\r\n    setListSent(e.target.textContent === 'Sent');\r\n  }\r\n  \r\n  const submitIdHandler = e => {\r\n    e.preventDefault();\r\n    setShowMsg(true);\r\n    if (!form.formValid) {\r\n      setErrorMsg(['The Form is Invalid']);\r\n      setTimeout(() => {\r\n        setErrorMsg([]);\r\n        setShowMsg(false);\r\n      }, 2000);\r\n      return;\r\n    }\r\n    const id = form.idForm.id.elementProps.value;\r\n\r\n    props.onSubmit(id);\r\n  };\r\n\r\n  const deleteMail = (allow) => {\r\n    if (allow) {\r\n      const email = listSent ? props.sent[deleteInd] : props.received[deleteInd];\r\n      setShowMsg(true);\r\n      props.onDelete({...email, type: listSent ? 'sent' : 'received'});\r\n    }\r\n    setConfirmDialog(false);\r\n    setDeleteInd(-1);\r\n  }\r\n\r\n  const confirm = (ind) => {\r\n    setConfirmDialog(true);\r\n    setDeleteInd(ind);\r\n  }\r\n\r\n\r\n  const getList = (list, action) => {\r\n    if (list.length) {\r\n      let mails = [(\r\n        <li key='-100' className={classes.Sticky}>\r\n          { action !== 'sent' ? <p>Sender</p> : <p>Receiver</p> }\r\n          <p>Subject</p>\r\n          <p>Date</p>\r\n          <p>Message</p>\r\n        </li>\r\n      )]\r\n      mails.push(...list.map((email, ind) => (\r\n        <li key={ind}>\r\n          { action === 'sent' ? <p>{email.receiver}</p> : <p>{email.sender}</p> }\r\n          <p>{email.subject}</p>\r\n          <p>{email.creation.split('T')[0]}</p>\r\n          <p>{email.message}</p>\r\n          <button type='button' onClick={e => confirm(ind)}>Delete?</button>\r\n        </li>\r\n      )));\r\n      return mails;\r\n    } else {\r\n      return <li>No e-mails were {action} by the user.</li>\r\n    }\r\n  };\r\n\r\n  const hideMsg = () => {\r\n    setShowMsg(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={classes.Manage}>\r\n      <ConfirmationDialog msg='Are you sure?' action={deleteMail} show={confirmDialog}/>\r\n      <form className={classes.Contact_Info} onSubmit={submitIdHandler} noValidate>\r\n        <h4>ID finder</h4>\r\n        {\r\n          Object.entries(form.idForm).map((ele, i) => {\r\n            return <Input \r\n              key={i} \r\n              {...ele[1]} \r\n              changed={(event) => \r\n                inputChangeHandler(event, ele[1].elementProps.id, form.idForm, setForm, 'idForm')} />\r\n          })\r\n        }\r\n        <button disabled={!form.formValid} className={classes.Form_Button}>Get</button>\r\n      </form>\r\n      { props.loading ? <Loading /> : (\r\n        <div className={classes.Mails}>\r\n        <div className={classes.Tabs}>\r\n          <h4 className={listSent ? classes.Active : ''} \r\n              onClick={changeTab}>\r\n                Sent\r\n          </h4>\r\n          <h4 className={!listSent ? classes.Active : ''} \r\n              onClick={changeTab}>\r\n                Received\r\n          </h4>\r\n        </div>\r\n        <ul>\r\n          { listSent ? getList(props.sent, 'sent') :\r\n                      getList(props.received, 'received') }\r\n        </ul>\r\n      </div>\r\n      ) }\r\n      \r\n      <MsgDialog msg={errorMsg.length ? errorMsg : props.errorMessages}\r\n                  show={showMsg} hideMsg={hideMsg}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.manageReducer.loading,\r\n    errorMessages: state.manageReducer.errors,\r\n    sent: state.manageReducer.sent,\r\n    received: state.manageReducer.received,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: payload => dispatch(actionCreators.getMessagesAttempt(payload)),\r\n    onReset: () => dispatch(actionCreators.resetManage()),\r\n    onDelete: payload => dispatch(actionCreators.deleteManage(payload))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Manage);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\DrawerToggle\\DrawerToggle.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],["101","102"],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\containers\\Compose\\Compose.js",["103","104"],"\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport classes from './Compose.module.scss';\r\n\r\nimport { inputChangeHandler } from '../../shared/utility';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport MsgDialog from '../../components/MsgDialog/MsgDialog';\r\n\r\nconst Compose = props => {\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [showMsg, setShowMsg] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    emailForm: {\r\n      sender: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'text',\r\n          id: 'sender',\r\n          placeholder: \"Your Id.\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Sender Id:'\r\n      },\r\n      subject: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'text',\r\n          id: 'subject',\r\n          placeholder: \"Enter your subject\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Subject:'\r\n      },\r\n      receiver: {\r\n        elementType: 'input', \r\n        elementProps: {\r\n          type: 'text',\r\n          id: 'receiver',\r\n          placeholder: \"Your receiver Id.\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Receiver Id:'\r\n      },\r\n      content: {\r\n        elementType: 'textarea', \r\n        elementProps: {\r\n          id: 'content',\r\n          placeholder: \"Your message goes here...\",\r\n          value: ''\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        errorMessages: [],\r\n        label: 'Message:'\r\n      }\r\n    },\r\n    formValid: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    return props.onReset;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.operationType === 'success') {\r\n      setForm({\r\n        formValid: false,\r\n        emailForm: {\r\n          sender: {\r\n            ...form.emailForm.sender,\r\n            elementProps: {\r\n              ...form.emailForm.sender.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          },\r\n          subject: {\r\n            ...form.emailForm.subject,\r\n            elementProps: {\r\n              ...form.emailForm.subject.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          },\r\n          receiver: {\r\n            ...form.emailForm.receiver,\r\n            elementProps: {\r\n              ...form.emailForm.receiver.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          },\r\n          content: {\r\n            ...form.emailForm.content,\r\n            elementProps: {\r\n              ...form.emailForm.content.elementProps,\r\n              value: ''\r\n            },\r\n            valid: false,\r\n            errorMessages: [],\r\n          }\r\n        }\r\n      })\r\n      setSuccess(true);\r\n    }\r\n  }, [props.operationType]);\r\n\r\n  const submitEmailHandler = e => {\r\n    e.preventDefault();\r\n    setShowMsg(true);\r\n    setSuccess(false);\r\n    if (!form.formValid) {\r\n      setErrorMsg(['The Form is Invalid']);\r\n      setTimeout(() => {\r\n        setErrorMsg([]);\r\n        setShowMsg(false);\r\n      }, 2000);\r\n      return;\r\n    }\r\n    const sender = form.emailForm.sender.elementProps.value;\r\n    const receiver = form.emailForm.receiver.elementProps.value;\r\n    const subject = form.emailForm.subject.elementProps.value;\r\n    const content = form.emailForm.content.elementProps.value;\r\n    \r\n    props.onSubmit({sender, receiver, subject, content});\r\n  };\r\n\r\n  const hideMsg = () => {\r\n    setShowMsg(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Compose}>\r\n      { props.loading ? <Loading /> : null }\r\n      { success ? <p>Email sent successfully!</p> : null}\r\n      <form className={classes.Contact_Info} onSubmit={submitEmailHandler} noValidate>\r\n        <h4>Email Info</h4>\r\n        {\r\n          Object.entries(form.emailForm).map((ele, i) => {\r\n            return <Input \r\n              key={i} \r\n              {...ele[1]} \r\n              changed={(event) => \r\n                inputChangeHandler(event, ele[1].elementProps.id, form.emailForm, setForm, 'emailForm')} />\r\n          })\r\n        }\r\n        <button disabled={!form.formValid}>Send</button>\r\n      </form>\r\n      <MsgDialog msg={errorMsg.length ? errorMsg : props.errorMessages}\r\n                  show={showMsg} hideMsg={hideMsg} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.composeReducer.loading,\r\n    errorMessages: state.composeReducer.errors,\r\n    operationType: state.composeReducer.operationType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: payload => dispatch(actionCreators.postMsgAttempt(payload)),\r\n    onReset: () => dispatch(actionCreators.resetCompose()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Compose);","C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actiontypes.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\shared\\utility.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Loading\\Loading.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\MsgDialog\\MsgDialog.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\index.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\compose.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\compose.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\reducers\\manage.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\store\\actions\\manage.js",[],"C:\\Users\\jovany\\Desktop\\guy\\study\\company tests\\herolo\\herolo-client\\src\\components\\ConfirmationDialog\\ConfirmationDialog.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":46,"column":6,"nodeType":"111","endLine":46,"endColumn":8,"suggestions":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":1,"message":"110","line":89,"column":6,"nodeType":"111","endLine":89,"endColumn":8,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"116","line":136,"column":6,"nodeType":"111","endLine":136,"endColumn":27,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.onReset'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],["121"],"React Hook useEffect has missing dependencies: 'form.emailForm.content', 'form.emailForm.receiver', 'form.emailForm.sender', and 'form.emailForm.subject'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setForm' needs the current value of 'form.emailForm.sender'.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [props.onReset]",{"range":"128","text":"129"},{"range":"130","text":"129"},"Update the dependencies array to be: [form.emailForm.content, form.emailForm.receiver, form.emailForm.sender, form.emailForm.subject, props.operationType]",{"range":"131","text":"132"},[1364,1366],"[props.onReset]",[2251,2253],[3489,3510],"[form.emailForm.content, form.emailForm.receiver, form.emailForm.sender, form.emailForm.subject, props.operationType]"]